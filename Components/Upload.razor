@namespace JelyUI.Components
@inherits ComponentBase
@using JelyUI.Components
@using Microsoft.AspNetCore.Components.Forms

@inject ILogger<Index> _logger
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navigationManager

@if(SupportsWebcam && UseWebcam) {
    <Webcam OnImageCapture="OnFileSelected" />
}
else {
    <Title Text="@Text" Subtext="@Subtext" />
    <ImageHeader Src="@Icon" />
    <div style="display: flex;flex-direction: row;">
        <label for="file-input" class="button">
            <i class="icon">file_upload</i>
            <InputFile id="file-input" @ref="_fileInput" OnChange="HandleFileChange" style="display: none;" />
        </label>
        @if(SupportsWebcam) {
            <Button OnClick="() => UseWebcam = true"><i class="icon">photo_camera</i></Button>
        }
    </div>
}

@code {
    [Parameter] public string Text { get; set; }
    [Parameter] public string Subtext { get; set; }
    [Parameter] public string Icon { get; set; }

    [Parameter] public Action<Stream> OnFileSelected { get; set; } = _ => { };
    [Parameter] public bool SupportsWebcam { get; set; } = false;
    bool UseWebcam { get; set; } = false;
    InputFile _fileInput;
    IJSObjectReference _module;
    string _imageData;

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(firstRender) {
            _module = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/_upload.js");
        }
    }

    async Task HandleFileChange(InputFileChangeEventArgs e) {
        await _module.InvokeVoidAsync("getResizedImage", _fileInput.Element, 800, 800, DotNetObjectReference.Create(this));
        var ms = new MemoryStream(Convert.FromBase64String(_imageData));
        if(ms.Length > 521000)
            _navigationManager.NavigateTo("/error");
        _imageData = "";
        OnFileSelected(ms);
    }

    [JSInvokable]
    public void ReceiveStringChunk(string chunk) =>
        _imageData += chunk;
}